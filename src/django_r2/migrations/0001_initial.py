# Generated by Django 5.1.6 on 2025-02-10 07:21

import django.db.models.deletion
import django_r2.buckets.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Bucket",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=64, null=True)),
                (
                    "storage_class",
                    models.CharField(
                        choices=[
                            ("Standard", "Standard"),
                            ("InfrequentAccess", "Infrequent Access"),
                        ],
                        default="Standard",
                        max_length=20,
                    ),
                ),
                (
                    "location_hint",
                    models.CharField(
                        choices=[
                            ("apac", "Asia Pacific"),
                            ("eeur", "Europe"),
                            ("enam", "North America"),
                            ("weur", "Western Europe"),
                            ("wnam", "Western North America"),
                            ("auto", "Auto"),
                        ],
                        default="auto",
                        max_length=5,
                    ),
                ),
                ("active_in_cloudflare", models.BooleanField(default=False)),
                (
                    "active_in_cloudflare_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buckets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BucketCredentials",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("access_key_id", models.TextField(blank=True, null=True)),
                ("secret_access_key", models.TextField(blank=True, null=True)),
                ("session_token", models.TextField(blank=True, null=True)),
                (
                    "account_id",
                    models.CharField(default=None, max_length=120, null=True),
                ),
                (
                    "parent_access_key_id",
                    models.CharField(default=None, max_length=240, null=True),
                ),
                (
                    "ttl_seconds",
                    models.IntegerField(default=django_r2.buckets.models.one_day_ttl),
                ),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "permission",
                    models.CharField(
                        choices=[
                            ("object-read-write", "Object Read Write"),
                            ("object-read", "Object Read Only"),
                        ],
                        default="object-read-write",
                        max_length=64,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "bucket",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="django_r2.bucket",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bucket Credentials",
                "verbose_name_plural": "Bucket Credentials",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Object",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid1,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[("user", "User"), ("bot", "Bot")],
                        default="user",
                        max_length=10,
                    ),
                ),
                (
                    "keyname",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="auto-formatted s3 filename",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "downloadable_filename",
                    models.CharField(
                        blank=True,
                        help_text="Downloadable filename",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "filename",
                    models.CharField(
                        db_index=True,
                        help_text="Uploaded file name",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "file_extension",
                    models.CharField(
                        blank=True,
                        help_text="Uploaded file extension",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "uploaded_width",
                    models.IntegerField(
                        blank=True, help_text="Uploaded file width in pixels", null=True
                    ),
                ),
                (
                    "uploaded_height",
                    models.IntegerField(
                        blank=True,
                        help_text="Uploaded file height in pixels",
                        null=True,
                    ),
                ),
                (
                    "uploaded_size",
                    models.IntegerField(
                        blank=True, help_text="Uploaded file size in bytes", null=True
                    ),
                ),
                (
                    "display_size",
                    models.CharField(
                        blank=True,
                        help_text="Uploaded file size in human readable format",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "uploaded_type",
                    models.CharField(
                        blank=True,
                        help_text="Uploaded file type",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("is_image_file", models.BooleanField(default=False)),
                ("is_video_file", models.BooleanField(default=False)),
                ("is_audio_file", models.BooleanField(default=False)),
                (
                    "uploaded_metadata",
                    models.JSONField(
                        blank=True, help_text="Uploaded file metadata", null=True
                    ),
                ),
                (
                    "uploaded_duration",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Uploaded file duration in seconds with microsecond precision",
                        max_digits=12,
                        null=True,
                    ),
                ),
                ("uploaded", models.BooleanField(default=False)),
                (
                    "uploaded_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time the file was successfully uploaded to S3",
                        null=True,
                    ),
                ),
                ("errors", models.JSONField(blank=True, default=dict, null=True)),
                (
                    "errors_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time the file upload failed",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "added_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "bucket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="django_r2.bucket",
                    ),
                ),
            ],
        ),
    ]
